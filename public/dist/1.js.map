{"version":3,"sources":["webpack:///../components/page/post.js","webpack:///../node_modules/node-fetch/browser.js"],"names":["props","state","title","body","comments","postId","match","params","then","resp","json","post","setState","map","comment","name","key","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;;AAII,sBAAcA,KAAd,EAAsB;AAAA;;AAAA,wHAEXA,KAFW;;AAIlB,cAAKC,KAAL,GAAa;AACTC,mBAAO,IADE;AAETC,kBAAM,IAFG;AAGTC,sBAAU;AAHD,SAAb;;AAJkB,YAUVC,MAVU,GAUCL,MAAMM,KAAN,CAAYC,MAVb,CAUVF,MAVU;AAAA;AAYrB;;;;4CAEoB;AAAA;;AAAA,gBAETA,MAFS,GAEE,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAFnB,CAETF,MAFS;;;AAIjB,qFAAqDA,MAArD,EACCG,IADD,CACO;AAAA,uBAAQC,KAAKC,IAAL,EAAR;AAAA,aADP,EAECF,IAFD,CAEO,UAAEG,IAAF,EAAY;AAAA,oBAEPT,KAFO,GAESS,IAFT,CAEPT,KAFO;AAAA,oBAEAC,IAFA,GAESQ,IAFT,CAEAR,IAFA;;;AAIf,uBAAKS,QAAL,CAAe;AACXV,gCADW;AAEXC;AAFW,iBAAf;AAKH,aAXD;;AAaA,+FAA+DE,MAA/D,EACCG,IADD,CACO;AAAA,uBAAQC,KAAKC,IAAL,EAAR;AAAA,aADP,EAECF,IAFD,CAEO,UAAEJ,QAAF,EAAgB;;AAEf,uBAAKQ,QAAL,CAAe;AACXR,8BAAUA,SAASS,GAAT,CAAc,UAAEC,OAAF,EAAe;AAAA,4BAE3BC,IAF2B,GAEZD,OAFY,CAE3BC,IAF2B;AAAA,4BAErBZ,IAFqB,GAEZW,OAFY,CAErBX,IAFqB;;;AAInC,+BAAO;AACHY,sCADG;AAEHZ;AAFG,yBAAP;AAKH,qBATS;;AADC,iBAAf;AAcP,aAlBD;AAoBH;;;iCAGS;AAAA,yBAE4B,KAAKF,KAFjC;AAAA,gBAEEC,KAFF,UAEEA,KAFF;AAAA,gBAESC,IAFT,UAESA,IAFT;AAAA,gBAEeC,QAFf,UAEeA,QAFf;;;AAIN,mBACI;AAAA;AAAA,kBAAK,WAAU,WAAf;AACI;AAAA;AAAA;AAAMF;AAAN,iBADJ;AAEI,yDAFJ;AAGI;AAAA;AAAA;AAAKC;AAAL,iBAHJ;AAII;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAMQC,yBAASS,GAAT,CAAc,UAAEC,OAAF,EAAWE,GAAX,EAAoB;AAAA,wBAEtBD,IAFsB,GAEPD,OAFO,CAEtBC,IAFsB;AAAA,wBAEhBZ,IAFgB,GAEPW,OAFO,CAEhBX,IAFgB;;;AAI9B,2BACI;AAAA;AAAA,0BAAK,WAAU,WAAf,EAA2B,KAAMa,GAAjC;AACI;AAAA;AAAA,8BAAI,WAAU,YAAd;AAA6BD;AAA7B,yBADJ;AAEI;AAAA;AAAA,8BAAG,WAAU,MAAb;AAAsBZ;AAAtB;AAFJ,qBADJ;AAOH,iBAXD;AANR,aADJ;AAsBH;;;;EAlFwBc,oB;;;;;;;;;;;;;ACH7B;;AAEA;AACA;;AAEA;AACA;AACA","file":"1.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport fetch from 'node-fetch'\n\nexport default class extends PureComponent {\n\n    constructor ( props ) {\n\n        super( props )\n\n        this.state = {\n            title: null,\n            body: null,\n            comments: [],\n        }\n\n        const { postId } = props.match.params\n\n    }\n\n    componentDidMount () {\n\n        const { postId } = this.props.match.params\n\n        fetch( `https://jsonplaceholder.typicode.com/posts/${postId}` )\n        .then( resp => resp.json() )\n        .then( ( post ) => {\n\n            const { title, body } = post\n\n            this.setState( {\n                title,\n                body,\n            } )\n\n        } )\n\n        fetch( `https://jsonplaceholder.typicode.com/comments?postId=${postId}` )\n        .then( resp => resp.json() )\n        .then( ( comments ) => {\n\n                this.setState( {\n                    comments: comments.map( ( comment ) => {\n\n                        const { name ,body } = comment\n\n                        return {\n                            name,\n                            body\n                        }\n\n                    } )\n\n                } )\n\n        } )\n\n    }\n\n\n    render () {\n\n        const { title, body, comments } = this.state\n\n        return (\n            <div className='container'>\n                <h1>{ title }</h1>\n                <hr />\n                <p>{ body }</p>\n                <h4>Comments:</h4>\n                {\n                    comments.map( ( comment, key ) => {\n\n                        const { name, body } = comment\n\n                        return (\n                            <div className='jumbotron' key={ key }>\n                                <h1 className='display-10'>{ name }</h1>\n                                <p className='lead'>{ body }</p>\n                            </div>\n                        )\n\n                    } )\n                }\n            </div>\n        )\n    }\n}\n","module.exports = exports = window.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = window.fetch.bind(window);\n\nexports.Headers = window.Headers;\nexports.Request = window.Request;\nexports.Response = window.Response;\n"],"sourceRoot":""}