{"version":3,"sources":["webpack:///../components/page/post.js","webpack:///../node_modules/node-fetch/browser.js"],"names":["_react","__webpack_require__","_default","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","title","body","comments","PureComponent","_this2","postId","match","params","_nodeFetch2","default","then","resp","json","post","setState","map","comment","name","_state","_react2","createElement","className","key","module","exports","window","fetch","bind","Headers","Request","Response"],"mappings":"oZAAAA,EAAAC,EAAA,cACAA,EAAA,0EAII,SAAAC,EAAcC,gGAAQC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KAEXF,IAFW,OAIlBG,EAAKM,OACDC,MAAO,KACPC,KAAM,KACNC,aAPcT,qUAFGU,gEAcJ,IAAAC,EAAAZ,KAETa,EAAWb,KAAKF,MAAMgB,MAAMC,OAA5BF,QAER,EAAAG,EAAAC,SAAA,8CAAqDJ,GAChDK,KAAM,SAAAC,GAAA,OAAQA,EAAKC,SACnBF,KAAM,SAAEG,GAAU,IACPb,EAAgBa,EAAhBb,MAAOC,EAASY,EAATZ,KACfG,EAAKU,UACDd,QACAC,YAIZ,EAAAO,EAAAC,SAAA,wDAA+DJ,GAC1DK,KAAM,SAAAC,GAAA,OAAQA,EAAKC,SACnBF,KAAM,SAAER,GACLE,EAAKU,UACDZ,SAAUA,EAASa,IAAK,SAAEC,GAEtB,OACIC,KAFmBD,EAAfC,KAGJhB,KAHmBe,EAATf,6CAWxB,IAAAiB,EAE4B1B,KAAKO,MAA/BC,EAFFkB,EAEElB,MAAOC,EAFTiB,EAESjB,KAAMC,EAFfgB,EAEehB,SAErB,OACIiB,EAAAV,QAAAW,cAAA,OAAKC,UAAU,aACXF,EAAAV,QAAAW,cAAA,UAAMpB,GACNmB,EAAAV,QAAAW,cAAA,WACAD,EAAAV,QAAAW,cAAA,SAAKnB,GACLkB,EAAAV,QAAAW,cAAA,uBAEIlB,EAASa,IAAK,SAAEC,EAASM,GAAS,IAEtBL,EAAeD,EAAfC,KAAMhB,EAASe,EAATf,KAEd,OACIkB,EAAAV,QAAAW,cAAA,OAAKC,UAAU,YAAYC,IAAMA,GAC7BH,EAAAV,QAAAW,cAAA,MAAIC,UAAU,cAAeJ,GAC7BE,EAAAV,QAAAW,cAAA,KAAGC,UAAU,QAASpB,8CCjEtDsB,EAAAC,UAAAC,OAAAC,MAGAF,EAAAf,QAAAgB,OAAAC,MAAAC,KAAAF,QAEAD,EAAAI,QAAAH,OAAAG,QACAJ,EAAAK,QAAAJ,OAAAI,QACAL,EAAAM,SAAAL,OAAAK","file":"1.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport fetch from 'node-fetch'\n\nexport default class extends PureComponent {\n\n    constructor ( props ) {\n\n        super( props )\n\n        this.state = {\n            title: null,\n            body: null,\n            comments: [],\n        }\n\n    }\n\n    componentDidMount () {\n\n        const { postId } = this.props.match.params\n\n        fetch( `https://jsonplaceholder.typicode.com/posts/${postId}` )\n            .then( resp => resp.json() )\n            .then( ( post ) => {\n                const { title, body } = post\n                this.setState( {\n                    title,\n                    body,\n                } )\n            } )\n\n        fetch( `https://jsonplaceholder.typicode.com/comments?postId=${postId}` )\n            .then( resp => resp.json() )\n            .then( ( comments ) => {\n                this.setState( {\n                    comments: comments.map( ( comment ) => {\n                        const { name, body } = comment\n                        return {\n                            name,\n                            body\n                        }\n                    } )\n                } )\n            } )\n\n    }\n\n    render () {\n\n        const { title, body, comments } = this.state\n\n        return (\n            <div className='container'>\n                <h1>{ title }</h1>\n                <hr />\n                <p>{ body }</p>\n                <h4>Comments:</h4>\n                {\n                    comments.map( ( comment, key ) => {\n\n                        const { name, body } = comment\n\n                        return (\n                            <div className='jumbotron' key={ key }>\n                                <h1 className='display-10'>{ name }</h1>\n                                <p className='lead'>{ body }</p>\n                            </div>\n                        )\n\n                    } )\n                }\n            </div>\n        )\n    }\n}\n","module.exports = exports = window.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = window.fetch.bind(window);\n\nexports.Headers = window.Headers;\nexports.Request = window.Request;\nexports.Response = window.Response;\n"],"sourceRoot":""}